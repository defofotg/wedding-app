name: CICD

on:
  push:
    tags:
      - '*'
env:
  POSTGRESQL_DB: wedding
  POSTGRESQL_USER: postgres
  POSTGRESQL_PASSWORD: mysecretpassword

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - uses: actions/checkout@v3
      - name: Build and push final release
        run: |
          set +x
          echo "deploy postgres"
          docker network create wedding-network
          docker run -d --name postgres -e POSTGRES_DB=${{ env.POSTGRESQL_DB }} -e POSTGRES_USER=${{ env.POSTGRESQL_USER }} -e  POSTGRES_PASSWORD=${{ env.POSTGRESQL_PASSWORD }} --network=wedding-network postgres:12
          sleep 5
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/wedding:${{ github.ref_name }} --network=wedding-network .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/wedding:${{ github.ref_name }}
          
  deploy:
  #  needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy in production
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            set +x
            echo "#####  Remove old version #######"
            (cd ${{ secrets.PATH }} && docker-compose rm -f wedding-app && cd ) || (echo "nohting to delete")
            echo "##### Deploy version ${{ github.ref_name }}#####"
            cd ${{ secrets.PATH }} && sed -i 's/TAG_WEDDING=.*/TAG_WEDDING=${{ github.ref_name }}/g' .env
            cd ${{ secrets.PATH }} && docker-compose up -d  wedding-app
      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          text: ':elasticbeanstalk: :aws: Deployment started... :grimacing: :crossed_fingers:'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
